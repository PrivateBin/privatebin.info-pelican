# privatebin.info / privatebin.net
map $server_name $redirect_domain {
    ~privatebin\.info$  privatebin.info;
    ~privatebin\.net$   privatebin.net;
}

# HTTP server
# serve Letsencrypt challenge, otherwise redirect
server {
    server_name .privatebin.info .privatebin.net;

    listen 80;
    listen [::]:80;

    location /.well-known/acme-challenge/ {
        alias /srv/acme-challenge/;
        try_files $uri =404;
    }

    location / {
        if ( $redirect_domain ) {
            return 301 https://$redirect_domain$request_uri;
        }
    }
}

# HTTPS server
# redirect to main address
server {
    server_name *.privatebin.info *.privatebin.net;

    listen 443;
    listen [::]:443;
    ssl_certificate     /etc/letsencrypt/live/privatebin.info/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/privatebin.info/privkey.pem;

    location / {
        if ( $redirect_domain ) {
            return 301 https://$redirect_domain$request_uri;
        }
    }
}

# static project site
server {
    server_name privatebin.info;

    listen 443;
    listen [::]:443;
    ssl_certificate     /etc/letsencrypt/live/privatebin.info/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/privatebin.info/privkey.pem;

    location / {
        root /usr/share/nginx/html;
        index index.html;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# demo site
server {
    server_name privatebin.net;

    listen 443;
    listen [::]:443;
    ssl_certificate     /etc/letsencrypt/live/privatebin.info/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/privatebin.info/privkey.pem;

    # proxy to demo site container
    location / {
        proxy_pass  http://privatebin-demo:80;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # deny access to sensitive folders
    location ~ /(cfg|doc|data|lib|tpl|tst|vendor) {
        deny all;
    }

    # deny access to .htaccess files
    location ~ /\.ht {
        deny all;
    }
}

